* Emacs
** Instalación

El uso de cualquier programa de cómputo inicia con la instalación del
mismo, en este caso instalaremos la versión más nueva de emacs, pero
no será una instalación cualquiera, nosotros *compilaremos* emacs para
que corra lo más rápido en nuestra máquina. Para ello debemos ejecutar
las siguientes instrucciones en una terminal.

#+BEGIN_SRC sh
mkdir ~/src
cd ~/src
sudo apt-get update
sudo apt-get install git
git clone -b master git://git.sv.gnu.org/emacs.git
sudo apt-get install build-essential automake texinfo libjpeg-dev libncurses5-dev libtiff5-dev libgif-dev libpng-dev libxpm-dev libgnutls28-dev libmagick++-dev
cd ~/src/emacs
./configure --with-x-toolkit=no --without-moudles --with-mailtools --with-imagemagick
make -j4 -s bootstrap
sudo make install
#+END_SRC

La actualización se realiza una vez cada dos semanas, para actualizar
nuestro emacs debemos ejecutar lo siguiente:

#+BEGIN_SRC sh
cd ~/src/emacs
git pull
./configure --with-x-toolkit=no --without-moudles --with-mailtools --with-imagemagick
make -j4 -s bootstrap
sudo make -j4 -s install
#+END_SRC

Este conjunto de procedimientos puede ser añadido a un =crontab= para
automatizarlo.

*** Instalación vía un administrador de paquetes

Para instalar emacs desde el administrador de paquetes debemos
ejecutar los siguientes comandos:

#+BEGIN_SRC sh
sudo add-apt-repository ppa:kelleyk/emacs -y
sudo apt-get update
sudo apt-get install emacs26
#+END_SRC

** Iniciando emacs

Cuando emacs se ejecuta sin ninguna configuración extra en un ambiente
gráfico se mostrará una ventana muy similar a la de la siguiente imagen:

[[file:img/emacs_basico.png]]

Emacs es un editor modular con mucha capacidad, sin embargo esta
modularidad hizo necesario la creación de terminología especial para
hacer referencia a las distintas partes que componen la ventana
gráfica que los usuarios ven. A continuación se muestra una lista
básica de los elementos que componen una ventana gráfica de emacs.

- *Frame* Es la ventana gráfica (lo que se dibuja al ejecutar emacs),
  usualmente los usuarios trabajan sobre una única ventana gráfica
  durante sus sesiones de edición, sin embargo emacs es capaz de
  manejar múltiples frames de manera simultánea.

  Los frames están compuestos de múltiples regiones, en la parte
  superior del frame se puede ver la *barra de menú*, esta barra
  aparece típicamente en la mayoría de los programas que poseen una
  interfaz gráfica, contiene secciones como: =archivo=, =edición=,
  =opciones=, etc. Bajo la barra de menú se encuentra una *barra de
  herramientas* que contiene íconos a las acciones de edición más
  comunes: =abrir archivo=, =nuevo archivo=, =guardar=, =cortar=,
  =copiar=, =pegar=, etc. En la parte inferior del frame se encuentra
  una región denominada *área de echo* donde es posible insertar
  comandos y donde los mensajes de información aparecen.
- *Ventana* Es el área que se encuentra entre la barra de herramientas
  y el área de echo, _cuidado_ no hay que confundir el concepto de
  ventana de emacs (área de edición de texto) y ventana de programa
  (concepto de interfaz gráfica). Recuerda que lo dibujado por el
  sistema gráfico se conoce como frame en el lenguaje de emacs.
- *Modeline* Se encuentra sobre el área de echo, en la configuración
  inicial de emacs posee un fondo gris, esta región muestra
  información relevante al *modo de edición actual* como: estado de
  guardado del archivo, número de línea donde se encuentra el cursor,
  etc.
- *Barra de scroll* Ubicada a la izquierda del frame, utilizada para
  desplazarse por el archivo utilizando el mouse.

Cuando se inicia emacs el comportamiento por defecto es el de crear un
único frame, sin embargo el usuario puede crear más ventanas dentro de
este frame de manera totalmente independiente.

Existe una única "restricción" en la configuración por defecto *sólo
puede haber una única ventana activa* (usualmente es la que tiene el
cursor que parpadea).

*** Buffers

Emacs utiliza *buffers* para poder editar archivos, un buffer es un
archivo cargado dentro de emacs, es un ente que puede moverse entre
ventanas pero no puede ser mostrado sin ellas, es decir, para poder
mostrar el contenido de un archivo dentro de emacs es necesario crear
un buffer dentro de una ventana. La mayor parte de edición dentro de
emacs (si no es que toda) ocurre dentro de los buffers.

*** Distribuciones de emacs
**** Centaur Emacs
**** DOOM Emacs
**** Spacemacs
** Definición de conceptos
*** Buffer

En emacs la única manera de visitar (visualizar) y editar un archivo
es a través de un buffer. Los buffers tienen un nombre único, este
nombre se muestra en la barra del modo de edición, los nombres de los
buffers son sensibles a las mayúsculas y minúsculas.

Emacs puede crear una infinidad de buffers, sin embargo sólamente un
buffer puede ser mostrado por ventana (si hay múltiples ventanas y un
solo buffer se mostrará dicho buffer en las múltiples ventanas) y más
importante *sólo un buffer puede ser seleccionado como buffer actual*,
existen comandos que operan sobre un buffer (como =M-x eval-buffer=).

Existe un límite en el tamaño de un buffer (en bytes) debido al tipo
de dato que emacs utiliza para representarlos, típicamente para una
computadora con un procsador de 64-bits el tamaño máximo de un buffer
es de /2^61 - 2/ bytes (alrededor de 2 exbibytes), mientras que en
equipos con un procesador de 32 bits el máximo es de aproximadamente
512 MiB. Obviamente este límite depende de la cantidad de memoria
instalada en el sistema.

*** Modos de edición


*** Mini-buffer
*** Kill-ring
** Comandos básicos
*** Moverse por la pantalla
*** Guardar un archivo
*** Abrir un archivo
** Org Mode
*** ¿Qué es Org Mode?
*** Estructura de un documento =.org=
**** Editar la estructura
*** Estilos de texto

- Negritas :: Se insertan rodeando la palabra con *asteríscos* =*palabra*=.
- Itálicas :: Se insertan rodeando la palabra con /diagonales/ =/palabra/=.
- Subrayado :: Se insertan rodeando la palabra con _guiones_ =_palabra_=.
- Monoespaciado :: Se inserta rodeando la palabra con ~churros~ =~palabra~=.
- Tachado ::  Se inserta rodeando la palabra con el signo de +más+ =+palabra+=.

*** Enlaces

Org permite crear enlaces a diferentes medios de información, los
enlaces más sencillos son aquellos que apuntan a distintas partes del
documento, para insertar un enlace basta con poner entre corchetes
dobles el título de una sección del documento:

#+BEGIN_SRC org
[[Introducción]]
#+END_SRC

De esta forma podemos al dar clic en dicho enlace el cursor se
posicionará en la sección /Introducción/ del documento. El comando de
emacs que nos ayuda a escribir enlaces más rápido es =C-c C-l= el cual
nos preguntará qué tipo de enlace queremos crear (a un archivo, URL,
email, etc.) seguido del texto que hará referencia a ese vínculo.

Para crear  un enlace  a otro  documento dentro  del mismo  sistema de
archivos basta con poner la ruta (absoluta o relativa) del documento a
enlazar, como ejemplo se crea un enlace al archivo [[file:../README.md][README]] de este proyecto:

#+BEGIN_SRC org
[[file:../README.md][README]]
#+END_SRC

Es posible crear enlaces a líneas específicas, supongamos que queremos
crear un enlace a la línea 42 del archivo =README.md= de este
proyecto, para ello debemos especificar la ruta relativa del archivo y
después indicar el número de línea a la cual deseamos apuntar, esto
último se indica con un separador de columna =::=, el enlace completo
quedará descrito de la siguiente manera:

#+BEGIN_SRC org
[[file:../README.md::42][Enlace de prueba]]
#+END_SRC

**** Crear tus propios enlaces

En emacs es fácil crear enlaces a todo tipo de información, como
ejemplo podemos crear un enlace a un recurso multimedia alojado en
youtube, para ello debemos editar el archivo =init.el= de emacs y
crear la función que generará nuestro enlace:

#+BEGIN_SRC emacs-lisp
  (defun crea-enlace-youtube (youtube-id)
    (browse-url (concat "https://www.youtube.com/embed/" youtube-id)))

  (org-add-link-type "yt" #'crea-enlace-youtube)
#+END_SRC

Después de definir ese tipo de enlace evaluamos la función insertando
el comando =M-x eval-buffer=, con la lista de enlaces actualizados es
posible insertar un enlace a un vídeo de youtube utilizando el comando
=C-c C-l yt=:

#+BEGIN_SRC org
[[yt:55eTdnEqcUo][te alegrará el día]]
#+END_SRC


*** Listas
**** Lista de cosas por hacer
*** Tablas
**** Hojas de cálculo
*** Exportación
*** Agenda
*** Bloques de código

En =Org Mode= es posible definir bloques de texto que pueden ser
evaluados para mostrar su resultado dentro de nuestros archivos
=.org=, estos bloques son conocidos como *bloques de código* su
estructura es la siguiente:

#+BEGIN_SRC org
,#+BEGIN_SRC lenguaje
codigo
,#+END_SRC
#+END_SRC

Para ejecutar el codigo =codigo= que se encuentra escrito en el
lenguaje =lenguaje= hay que insertar el comando =C-c C-c=, el
resultado se añadirá en un bloque nuevo llamado =#+RESULTS:=, como
ejemplo crearemos un bloque de código en =bash= que muestre el
contenido del directorio =/etc=:

#+BEGIN_SRC org
,#+BEGIN_SRC sh :dir /etc
ls
,#+END_SRC
#+END_SRC

El parámetro =:dir= ejecuta el código sobre el directorio que se
indica, es tan versátil que no está limitado a directorios locales ya
que es posible indicar un directorio remoto:

#+BEGIN_SRC org
,#+BEGIN_SRC sh :dir /registro.fciencias.com:
hostname -f
,#+END_SRC

,#+RESULTS:
: registro.fciencias.unam.mx
#+END_SRC

**** Inserción de parámetros a los bloques de código

Los parámetros que se le pasan a los bloques de código pueden ser
especificados en distintos lugares:

- En línea :: Después de definir el lenguaje del bloque.
- Por sección :: Todos los bloques de una sección tomarán los mismos
                 parámetros.
- Por documento :: Los parámetros son globales al documento.
- Globales :: Todos los bloques creados dentro del sistema tendrán los
              mismos parámetros.

Los parámetros globales se encuentran definidos en las siguientes
variables de emacs:

#+BEGIN_SRC emacs-list
org-babel-default-header-args
org-babel-default-header-args:<lenguaje>
#+END_SRC

Cuando se desea insertar el nombre de una variable aleatoria se le
debe insertar después de la etiqueta =:var=:

#+BEGIN_SRC org
,#+BEGIN_SRC sh :dir /etc :var MUNDO="emacs"
echo "Hola, ${MUNDO}"
,#+END_SRC
#+END_SRC

Si el número de parámetros es muy grande insertarlos en línea se
vuelve complicado, para ello existe la cabecera =#+HEADER:= la cual
nos permite definir variables que serán utilizadas por el bloque de
código que le sigue:

#+BEGIN_SRC org
,#+HEADER: :var MUNDO="emacs"
,#+BEGIN_SRC sh :dir /etc
echo "Hola, ${MUNDO}"
,#+END_SRC
#+END_SRC


** Org Mode en la vida diaria
*** Crear un archivo =init.el=
